apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    name: redis
  selector:
    app: redis
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
  labels:
    name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: redis
        app: redis
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: rabbitmq-pool
      containers:
        - name: redis
          image: redis
          ports:
            - containerPort: 6379
#apiVersion: storage.k8s.io/v1beta1
#kind: StorageClass
#metadata:
#  name: default
#  annotations:
#    storageclass.beta.kubernetes.io/is-default-class: "true"
#  labels:
#    kubernetes.io/cluster-service: "true"
#provisioner: kubernetes.io/aws-ebs
#parameters:
#  type: gp2
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: redis-primary
#  labels:
#    app: redis-primary
#spec:
#  ports:
#  - port: 6379
#    name: redis-primary
#  selector:
#    app: redis-primary
#---
#apiVersion: apps/v1beta1
#kind: StatefulSet
#metadata:
#  name: redis-primary
#spec:
#  serviceName: redis-primary
#  replicas: 1
#  template:
#    metadata:
#      labels:
#        app: redis-primary
#    spec:
#      nodeSelector:
#        cloud.google.com/gke-nodepool: postgres-pool
#      terminationGracePeriodSeconds: 10
#      containers:
#      - name: redis-primary
#        image: corybuecker/redis:3.2
#        imagePullPolicy: Always
#        ports:
#        - containerPort: 6379
#          name: redis-primary
#        volumeMounts:
#        - name: redis-primary-volume
#          mountPath: /data
#  volumeClaimTemplates:
#  - metadata:
#      name: redis-primary-volume
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 5Gi
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: redis-secondary
#  labels:
#    app: redis-secondary
#spec:
#  ports:
#  - port: 6379
#    name: redis-secondary
#  selector:
#    app: redis-secondary
#---
#apiVersion: apps/v1beta1
#kind: StatefulSet
#metadata:
#  name: redis-secondary
#spec:
#  serviceName: redis-secondary
#  replicas: 2
#  template:
#    metadata:
#      labels:
#        app: redis-secondary
#    spec:
#      nodeSelector:
#        cloud.google.com/gke-nodepool: postgres-pool
#      terminationGracePeriodSeconds: 10
#      containers:
#      - name: redis-secondary
#        image: corybuecker/redis:3.2
#        imagePullPolicy: Always
#        env:
#        - name: REPLICA
#          value: "true"
#        ports:
#        - containerPort: 6379
#          name: redis-secondary
#        volumeMounts:
#        - name: redis-secondary-volume
#          mountPath: /data
#  volumeClaimTemplates:
#  - metadata:
#      name: redis-secondary-volume
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 5Gi
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: redis-sentinel
#  labels:
#    app: redis-sentinel
#spec:
#  ports:
#  - port: 26379
#    name: redis-sentinel
#  selector:
#    app: redis-sentinel
#---
#apiVersion: apps/v1beta1
#kind: StatefulSet
#metadata:
#  name: redis-sentinel
#spec:
#  serviceName: redis-sentinel
#  replicas: 3
#  template:
#    metadata:
#      labels:
#        app: redis-sentinel
#    spec:
#      nodeSelector:
#        cloud.google.com/gke-nodepool: postgres-pool
#      terminationGracePeriodSeconds: 10
#      containers:
#      - name: redis-sentinel
#        image: corybuecker/redis:3.2
#        imagePullPolicy: Always
#        env:
#        - name: SENTINEL
#          value: redis-primary
#        ports:
#        - containerPort: 26379
#          name: redis-sentinel
