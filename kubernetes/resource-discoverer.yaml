apiVersion: v1
kind: Service
metadata:
  name: resource-discovery
  labels:
    app: resource-discovery
  annotations:
    cloud.google.com/load-balancer-type: "internal"
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    name: resource-discovery
    protocol: TCP
  selector:
    app: resource-discovery

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: resource-discovery
  labels:
    name: resource-discovery
spec:
  replicas: 12
  template:
    metadata:
      labels:
        name: resource-discovery
        app: resource-discovery
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      containers:
        - name: resource-discovery
          image: arthurmde/resource-discoverer:0.2-0.6-exp2
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /health_check
              port: 3000
            initialDelaySeconds: 120
            timeoutSeconds: 120
          readinessProbe:
            httpGet:
              path: /health_check
              port: 3000
            initialDelaySeconds: 120
            timeoutSeconds: 120
          env:
            - name: RAILS_MAX_THREADS
              value: '512'
            - name: RABBITMQ_HOST
              value: 'rabbitmq'
            - name: KONG_URI
              value: 'http://kong-admin:8001'
            - name: REGISTER_METHOD
              value: 'api'
            - name: DATACOLLECTOR_HOST
              value: 'kong-proxy:8000/collector'
            - name: CATALOGUER_HOST
              value: 'kong-proxy:8000/catalog'
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command: [ "/bin/sh", "-c", "rm /resource-discoverer/tmp/pids/server.pid && apt update && apt install curl -y && export SELF_HOST=resource-discovery:3000 && bundle exec rails s -p 3000 -b 0.0.0.0" ]
          resources:
            requests:
              memory: "400M"
              cpu: "0.1"
